


case class REnum{
    name:String;
    values:Array<String>;
}

case class RValueType{
    typeSig:RTypeSig;
    required:Boolean;
}

case class RFunctionParam{
    name:String;
    valueType:RValueType;
}

case class RProperty{
    name:String;
    valueType:RValueType;
}

case class RFunction{
    name:String;
    params:Array<RFunctionParam>;
    resultType:?RValueType;
}

case class RRemoteClass{
    typeSig:RTypeSig;
    functions:Array<RFunction>;
}

case class RValueClass{
    typeSig:RTypeSig;
    properties: Array<RProperty>;
}

case class RServiceVersion{
    majorVersion:Integer;
    minorVersion:Integer;
    patch:?Integer;
}
/*
case class RService{
    enums:Array<REnum>;
    valueClasses:Array<RValueClass>;
    remoteClasses:Array<RRemoteClass>;
}

remote class RodCompiler{
    compile(name:String,code:String):RService;
}
*/